{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/AddMessageForm/AddMessageForm.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","DialogItem","path","id","s","dialog","active","to","dialogName","Message","message","maxLength50","reduxForm","form","onSubmit","handleSubmit","Field","style","resize","border","msgStyles","sendBtn","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/6.e97a27f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2X90n\",\"error\":\"FormsControls_error__1rHA3\",\"formSummaryError\":\"FormsControls_formSummaryError__3RSdE\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      <div>{children}</div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validators,\r\n  component,\r\n  props = {},\r\n  text = \"\"\r\n) => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        placeholder={placeholder}\r\n        name={name}\r\n        validate={validators}\r\n        component={component}\r\n        {...props}\r\n      />\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n","export const required = (value) => {\r\n  if (value) return undefined;\r\n\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) {\r\n    return `Max length is ${maxLength} symbols`;\r\n  } else {\r\n    return undefined;\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__w38wn\",\"dialogsItems\":\"Dialogs_dialogsItems__1618b\",\"active\":\"Dialogs_active__2DaAf\",\"messages\":\"Dialogs_messages__3ZsDM\",\"dialog\":\"Dialogs_dialog__2-d_X\",\"dialogName\":\"Dialogs_dialogName__33VCN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sendBtn\":\"AddMessageForm_sendBtn__OpNhb\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={path} className={s.dialogName}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.dialog}>{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport msgStyles from \"./AddMessageForm.module.css\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[required, maxLength50]}\r\n          placeholder=\"Enter your message\"\r\n          name=\"newMessageBody\"\r\n          style={{ resize: \"none\", border: \"none\"}}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className={msgStyles.sendBtn}>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"dialog-add-message-form\" })(AddMessageForm);\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { sendMessageCreator } from \"../../Redux/dialogs-reducer\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}