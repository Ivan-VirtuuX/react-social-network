{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/images/bg.jpg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/images/logo2.jpg","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","src","bg","s","image","alt","descriptionBlock","photos","large","Preloader","Post","item","logo2","message","likesCount","maxLength10","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","style","resize","border","MyPosts","React","memo","postsElements","posts","reverse","map","p","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.9404dbaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2X90n\",\"error\":\"FormsControls_error__1rHA3\",\"formSummaryError\":\"FormsControls_formSummaryError__3RSdE\"};","export const required = (value) => {\r\n  if (value) return undefined;\r\n\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) {\r\n    return `Max length is ${maxLength} symbols`;\r\n  } else {\r\n    return undefined;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      <div>{children}</div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validators,\r\n  component,\r\n  props = {},\r\n  text = \"\"\r\n) => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        placeholder={placeholder}\r\n        name={name}\r\n        validate={validators}\r\n        component={component}\r\n        {...props}\r\n      />\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/bg.3de431ec.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2XLC0\",\"image\":\"ProfileInfo_image__1agRP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3JfeM\",\"posts\":\"MyPosts_posts__3wGfz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__oM6O1\"};","module.exports = __webpack_public_path__ + \"static/media/logo2.8f68e1b5.jpg\";","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{status || \"-----\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n  ","import React from \"react\";\r\nimport bg from \"../../../assets/images/bg.jpg\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src={bg} className={s.image} alt=\"\" />\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} alt=\"\" />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React from \"react\";\r\nimport bg from \"../../../../assets/images/bg.jpg\";\r\nimport s from \"./Post.module.css\";\r\nimport logo2 from \"../../../../assets/images/logo2.jpg\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src={logo2} />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field } from \"redux-form\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          placeholder={\"Post message\"}\r\n          validate={[required, maxLength10]}\r\n          style={{ resize: \"none\", border: \"none\" }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button style={{ border: \"none\" }}>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((p) => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","\r\nimport React from \"react\";\r\n\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../Redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}